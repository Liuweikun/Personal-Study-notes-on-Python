print("参数的传递")

"""
如果传递的参数是可变对象
如字典，列表，集合，自定义对象，则实际传递的是对象的引用，
则在函数体中不创建新的对象拷贝，而是直接修改所传递的对象

"""

#参数的传递，传递可变对象
b = [10,20]   #先是全局变量，但是是可变的
print(id(b))
print(b)
print("++++++++++++++++++++++++++++++++++++++")

def test01(m):     #定义一个函数f,并定义形式参数m
    print("m的ID为：",id(m))    #查看m的id
    m.append(30)      #重新给m赋值
    print("增加后m的ID为：",id(m))


test01(b)           #将b代入f
print("b:",id(b))    #查看b代入函数f后，ID
print(b)

print("+++++++++++++++++++++++++++++++++++++++")
print("传递不可变对象的引用")
"""
传递参数是不可变的，如数字，字符串，元组，function，布尔值
"""
c = 100
print(id(c))

print("++++++++++++++++++++")

def test02(n):
    print("n:",id(n))
    n = n + 200
    print("n:",id(n))
    print(n)

test02(c)
print(id(c))









