import turtle

print("函数用法和底层分析")
#函数是一个可以重复使用的代码块
"""
一个函数由一个个任务组成，函数就是代表一个任务或者一个功能
函数是代码复用的通用机制
"""
print("函数分类")
"""
1、内置函数，系统自带
2、标准库函数，使用import导入后使用
3、第三方函数，需要下载导入
4、自定义函数，现在学习如何自定义函数
"""

print("函数的定义和调用")
"""
def 函数名 ([参数列表]):
    "文档字符串"
    函数体/若干语句


要点：
1、我们使用def定义函数，然后就是一个空格和函数名称
（1）python 执行 def 时，会创建一个函数对象，并绑定到函数名变量上
2、参数列表：
    (1）圆括号时形式参数列表，有多个参数用逗号隔开
    (2) 形式参数不需要声明类型，也不需要指定函数返回值类型
    (3) 无参数，也必须保留空的圆括号
    (4) 实参数列表必须与形参列表一一对应
3、return返回值
    (1) 如果函数体包含return语句，则结束函数执行并返回值
    (2) 如果函数体中不包含return语句，则返回None值
4、调用函数之前，必须要先定义函数，即先调用def创建函数对象
    (1) 内置函数对象会自动创建
    (2) 标准库和第三方函数，通过import导入模块时，会执行模块中的def语句
        
"""


def test_01():
    print("#"*80)

test_01()


def test_02(a,b):               #a,b就是形式参数，是在定义函数时使用的
    """实现两个数毕竟大小"""       #文档字符串，在定义函数底下用"""  """
    if a > b:
        print(a,"较大值")
    else:
        print(b,"较大值")

test_02(30,50)          #实际参数，在调用函数时，传递的参数称之为实际参数
test_01()
print("文档字符串")

help(test_02)          #调用函数文档说明，不需要加括号
#(print)
#help(turtle.hideturtle)

test_01()
print("返回值")
"""
如果有return，则结束函数执行并返回值
如果不返回return，则返回None
要返回多个返回值，使用列表，元组，字典，集合将多个值存起来
"""
def test_03(a,b):
    return (a + b)/2

c = test_03(10,20)
print(c)

test_01()
def add(a,b):
    print("计算两个数相加之和：{0} + {1} = {2}".format(a,b,(a+b)))   #定义两数相加的方法
    return a + b

d = add(30,40)
print(d)

def test_04(x,y,z):
    return[x*10,y*10,z*10]      #初步了解，之后多多熟悉
print(test_04(30,40,50))